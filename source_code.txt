Source_Code_of_the_project:
#include <iostream>
#include <string>
#include <vector>

using namespace std;

class User {
public:
    string username, password, name, email;

    void registerUser() {
        cout << "Enter username: ";
        cin >> username;
        cout << "Enter password: ";
        cin >> password;
        cout << "Enter name: ";
        cin >> name;
        cout << "Enter email: ";
        cin >> email;
    }

    void login() {
        string enteredUsername, enteredPassword;
        cout << "Enter username: ";
        cin >> enteredUsername;
        cout << "Enter password: ";
        cin >> enteredPassword;
        if (enteredUsername == username && enteredPassword == password) {
            cout << "Login successful!" << endl;
        }
        else {
            cout << "Invalid username or password!" << endl;
        }
    }

    void passwordRecovery() {
        cout << "Enter new password: ";
        cin >> password;
    }

    void viewProfile() {
        cout << "Username: " << username << endl;
        cout << "Name: " << name << endl;
        cout << "Email: " << email << endl;
    }
};

class Budget {
public:
    double income, expense, balance;

    void setBudget(double income, double expense) {
        this->income = income;
        this->expense = expense;
        balance = income - expense;
    }

    void trackBudget() {
        cout << "Income: " << income << endl;
        cout << "Expense: " << expense << endl;
        cout << "Balance: " << balance << endl;
    }

    void editBudget(double newIncome, double newExpense) {
        income = newIncome;
        expense = newExpense;
        balance = income - expense;
    }
};

class Expense {
public:
    string description;
    double amount;

    void setExpense(string description, double amount) {
        this->description = description;
        this->amount = amount;
    }
};

class Income {
public:
    string description;
    double amount;

    void setIncome(string description, double amount) {
        this->description = description;
        this->amount = amount;
    }
};

class BudgetTrackingApp {
public:
    User user;
    Budget budget;
    vector<Expense> expenses;
    vector<Income> incomes;

    void budgetInput();
    void expenseInput();
    void incomeInput();
    void trackBudget();
    void expenseHistory();
    void incomeHistory();
    void budgetAlerts();
    void basicAnalytics();
    void passwordRecovery();
    void editBudget();
    void searchExpenses();
    void searchIncomes();
    void viewProfile();
    void displayMenu();
};

void BudgetTrackingApp::budgetInput() {
    double income, expense;
    cout << "Enter income: ";
    cin >> income;
    cout << "Enter expense: ";
    cin >> expense;
    budget.setBudget(income, expense);
}

void BudgetTrackingApp::expenseInput() {
    string description;
    double amount;
    cout << "Enter expense description: ";
    cin >> description;
    cout << "Enter expense amount: ";
    cin >> amount;
    Expense expense;
    expense.setExpense(description, amount);
    expenses.push_back(expense);
}

void BudgetTrackingApp::incomeInput() {
    string description;
    double amount;
    cout << "Enter income description: ";
    cin >> description;
    cout << "Enter income amount: ";
    cin >> amount;
    Income income;
    income.setIncome(description, amount);
    incomes.push_back(income);
}

void BudgetTrackingApp::trackBudget() {
    budget.trackBudget();
}

void BudgetTrackingApp::expenseHistory() {
    for (Expense expense : expenses) {
        cout << "Description: " << expense.description << endl;
        cout << "Amount: " << expense.amount << endl;
    }
}

void BudgetTrackingApp::incomeHistory() {
    for (Income income : incomes) {
        cout << "Description: " << income.description << endl;
        cout << "Amount: " << income.amount << endl;
    }
}

